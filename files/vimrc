" based mostly on sensible.vim by Tim Pope
" and on vimrc from joaomcteixeira
" with a few additions here and there
"
if exists('g:loaded_sensible') || &compatible
  finish
else
  let g:loaded_sensible = 'yes'
endif

if has('autocmd')
  filetype plugin indent on
endif
if has('syntax') && !exists('g:syntax_on')
  syntax enable
endif

" Remap half PgUp/PgDn to ,d/,c
nnoremap ,d <C-u>
nnoremap ,c <C-d>
" Remap window navigation
" Instead of Ctrl-W + J, do ,J
nnoremap ,j <C-W><C-J>
nnoremap ,k <C-W><C-K>
nnoremap ,l <C-W><C-L>
nnoremap ,h <C-W><C-H>

" allow buffer change with unsaved changed
set hidden

" Indentation & Spaces
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set autoindent

" match long/empty lines
match ErrorMsg '\%>80v.\+'
match ErrorMsg '\s\+$'

" saner backspace key
set backspace=indent,eol,start
" wrap lines when moving with cursor/hl keys
set whichwrap+=<,>,h,l

" Auto-complete with Ctrl-P: ignore included files.
set complete-=i

" regular expressions
set magic

" show matching brackets
set showmatch
set mat=2  " blink time when matching (in 0.1s)

" do not wrap long lines
set nowrap

" no backup
set nobackup

" tab-completion for file-related tasks
set path+=**
set wildmenu

if !has('nvim') && &ttimeoutlen == -1
  set ttimeout
  set ttimeoutlen=100
endif

" search as you type
set incsearch
" Use <esc><esc> to clear the highlighting of :set hlsearch.
nnoremap <esc><esc> :silent! nohls<cr>

set laststatus=2
set ruler

if !&scrolloff
  set scrolloff=1
endif
if !&sidescrolloff
  set sidescrolloff=5
endif
set display+=lastline

if v:version > 703 || v:version == 703 && has("patch541")
  set formatoptions+=j " Delete comment character when joining commented lines
endif

if has('path_extra')
  setglobal tags-=./tags tags-=./tags; tags^=./tags;
endif

if &shell =~# 'fish$' && (v:version < 704 || v:version == 704 && !has('patch276'))
  set shell=/usr/bin/env\ bash
endif

set autoread

if &history < 1000
  set history=1000
endif
if &tabpagemax < 50
  set tabpagemax=50
endif
if !empty(&viminfo)
  set viminfo^=!
endif
set sessionoptions-=options
set viewoptions-=options

" Allow color schemes to do bright colors without forcing bold.
if &t_Co == 8 && $TERM !~# '^Eterm'
  set t_Co=16
endif

" Load matchit.vim, but only if the user hasn't installed a newer version.
if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
  runtime! macros/matchit.vim
endif

if empty(mapcheck('<C-U>', 'i'))
  inoremap <C-U> <C-G>u<C-U>
endif
if empty(mapcheck('<C-W>', 'i'))
  inoremap <C-W> <C-G>u<C-W>
endif

" vim:set ft=vim et sw=2:

" autocmds
" Delete trailing white space on save, useful for some filetypes ;)
" from github.com/christopheryoung/dotfiles
function! CleanExtraSpaces()
  let save_cursor = getpos(".")
  let old_query = getreg('/')
  silent! %s/\s\+$//e
  call setpos('.', save_cursor)
  call setreg('/', old_query)
endfun

if has("autocmd")
  autocmd BufWritePre *.txt,*.js,*.py,*.wiki,*.sh,*.coffee :call CleanExtraSpaces()
endif
